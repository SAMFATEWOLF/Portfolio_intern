package main

import (
	"fmt"
)

// Кузя снова не успел сдать реферат по языковым разнообразиям в срок. 
// «Наверное, у меня какая-то неоптимальная клавиатура...» — подумал Кузя и 
// решил изобрести самую оптимальную клавиатуру для набора одним пальцем.
// Кузя решил, что его клавиатура будет содержать N рядов с клавишами (разные 
// 	ряды могут содержать разные количества клавиш). Все клавиши на клавиатуре будут уникальными.
// Чтобы оценить качество клавиатуры для набора определённого текста, Кузя ввёл 
// понятие «разнорядности»:
// •	Пусть текст представляет из себя строку S длины K;
// •	Назовём переход между соседними в тексте символами Si−1 и Si(2≤i≤K) 
// разнорядным, если данные символы находятся на различных рядах клавиатуры;
// •	Разнорядность равна количеству разнорядных переходов при наборе 
// текста на заданной клавиатуре.
// Например, пусть текст S равен ABCAD, а клавиатура содержит два ряда клавиш 
// AC и BD. В таком случае при наборе текста будет ровно 3 разнорядных перехода:
// 1.	S1=A в S2=B (ряд 1 в ряд 2);
// 2.	S2=B в S3=C (ряд 2 в ряд 1);
// 3.	S4=A в S5=D (ряд 1 в ряд 2).
// Вас, как лучшего игрока в Тетрис среди знакомых, Кузя просит вычислить 
// разнорядность созданной им клавиатуры на последнем из Кузиных рефератов.
// Формат ввода
// Первая строка содержит одно целое число N(1≤N≤2⋅105) — количество клавиш на клавиатуре.
// Вторая строка содержит N целых чисел ci(0≤ci≤109) — идентификаторы 
// символов на клавишах. Гарантируется, что все значения ci различны.
// Третья строка содержит N целых чисел ri(1≤ri≤109). Число ri задает 
// номер ряда на клавиатуре, в котором расположена клавиша с символом ci.
// Четвертая строка содержит одно целое число K(1≤K≤2⋅105) — количество символов в реферате.
// Пятая строка содержит K целых чисел sj(0≤sj≤109) — идентификаторы 
// символов реферата в порядке набора на клавиатуре. Гарантируется, 
// что для любого sj существует такой i, что sj=ci — любой символ из реферата присутствует на клавиатуре.
// Формат вывода
// Выведите единственное целое число — разнорядность заданной во входных данных конструкции клавиатуры на реферате S.



func main() {

	var a, b, c, d, e int
	fmt.Scan(&a)

	var arr2, arr3 []int
	for i := 0; i < a; i++ {
		fmt.Scan(&b)
		arr2 = append(arr2, b)
	}
	for i := 0; i < a; i++ {
		fmt.Scan(&c)
		arr3 = append(arr3, c)
	}
	fmt.Scan(&d)
	var arr5 []int
	for i := 0; i < d; i++ {
		fmt.Scan(&e)
		arr5 = append(arr5, e)
	}

	counter := 0
	flag := 0
	m := make(map[int]int)
	for idx, el := range arr2 {
		idx = arr3[idx]
		m[el] = idx
	}
	for _, el := range arr5 {
		if flag != m[el] {
			flag = m[el]
			counter++
		}
	}
	res := counter - 1
	if res < 0 {
		res = 0
	}

	fmt.Println(res)
}
